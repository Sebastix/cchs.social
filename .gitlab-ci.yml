image: php:8.2-alpine

# Preparation:
# Save $SSH_PRIVATE_KEY first in GitLab CI variables.
variables:
  # Test
  DRUPAL_PROJECTROOT: "/var/www/cchs.sebastix.dev"
  URL: "https://cchs.sebastix.dev"
  SSH_LOGIN: "ssh -T root@sebastix.dev"
  SSH_USER: "root"
  SSH_HOST: "sebastix.dev"
  # Production
  DRUPAL_PROJECTROOT_PROD: "/home/cchs/domains/cchs.social"
  URL_PROD: "https://cchs.social"
  SSH_LOGIN_PROD: "cchs@cchs.social"
  SSH_USER_PROD: "cchs"
  SSH_HOST_PROD: "cchs.social"

stages:
  - build
  - deploy

before_script:
  - 'which ssh-agent || ( apk add --update openssh )'
  - apk add --update bash
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # Install rsync
  - apk add rsync
  - rsync --version
  # Install bash
  - apk add bash
  # Install curl
  - apk add curl
  # Install composer
  - curl -s https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
  - alias composer='php /usr/bin/composer'
  - composer --version
  # Install nodejs and npm
  - apk add nodejs npm
  - node --version
  - npm --version
  # install php gd extension
  - docker-php-ext-install gd

build:drupal:
  stage: build
  script:
    - composer install --no-dev --prefer-dist --optimize-autoloader
  artifacts:
    paths:
      - web
      - vendor

build:theme:
  stage: build
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - web/themes/custom/hix

deploy:staging:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  stage: deploy
  dependencies:
    - build:drupal
    - build:theme
  script:
    - ls -la
    - rsync -a --delete -e ssh config $SSH_USER@$SSH_HOST:$DRUPAL_PROJECTROOT
    - rsync -a --delete -e ssh web/modules/custom $SSH_USER@$SSH_HOST:$DRUPAL_PROJECTROOT/web/modules
    - rsync -a --delete -e ssh web/themes/custom $SSH_USER@$SSH_HOST:$DRUPAL_PROJECTROOT/web/themes
    - rsync -a -e ssh composer.json $SSH_USER@$SSH_HOST:$DRUPAL_PROJECTROOT
    - rsync -a -e ssh composer.lock $SSH_USER@$SSH_HOST:$DRUPAL_PROJECTROOT
    - $SSH_LOGIN "chown -R nginx:nginx $DRUPAL_PROJECTROOT"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && composer install --optimize-autoloader --no-dev --prefer-dist"
    # New site install
    #- $SSH_LOGIN "drush si -y"
    # Existing site: updates must be run before configuration is imported
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush updatedb -y"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush config-import -y"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush locale:check"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush locale:update"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush core-cron"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT && drush cache-rebuild -y"
    # Compile theme assets
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT/web/themes/custom/hix && npm install"
    - $SSH_LOGIN "cd $DRUPAL_PROJECTROOT/web/themes/custom/hix && npm run build"
    - echo "Deployment ready, check $URL"

# @TODO - deploy to production cchs.social
deploy:prod:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: always
    - if: $CI_COMMIT_BRANCH == "master"
      when: manual
  stage: deploy
  dependencies:
    - build:drupal
    - build:theme
  script:
    - ls -la
    - $SSH_LOGIN_PROD "cd DRUPAL_PROJECT_ROOT_PROD && ls -la"
    - $SSH_LOGIN_PROD "cd $DRUPAL_PROJECT_ROOT_PROD && drush cr"
